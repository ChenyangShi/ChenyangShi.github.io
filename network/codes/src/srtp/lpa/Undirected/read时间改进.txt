package cpm;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;

public class ReadData {
	
	int nodenum;//节点数
	int edgenum;//边数
	public ArrayList<Integer> neighbor[];//顶点的表节点
	//一个 Key对应多个Value
	public HashMap<Integer, ArrayList<Integer>> neighbormap = new HashMap<Integer, ArrayList<Integer>>();
	
	public ReadData (String filename) 
	{	
		try
			{	
				FileReader fr = new FileReader(filename);
				BufferedReader br = new BufferedReader(fr);
				
				String aline = "";
				aline = br.readLine();//读取文件第一行
				String array[] = aline.split("\\s+");//以空白格分割字符 放入新的数组
				nodenum = Integer.parseInt(array[0]);//取得总结点数
				
				System.out.println("nodenum:" + nodenum);
				System.out.println("reading file:" + filename);
				
				//分配空间 初始化表节点
				neighbor = new ArrayList [nodenum];
				for(int i = 0; i < nodenum; i++)
					neighbor[i] = new ArrayList<Integer>();//给表节点分配空间

				int line = 0;//统计文件行数
				
				int nodeid1;
				int nodeid2;
			//	double edgeweight;
				while((aline = br.readLine()) != null)
				{
					line++;
					System.out.println("reading line: " + line);//显示正在读的行数
					
					String arrays[] = aline.split("\\s+");
					nodeid1 = Integer.parseInt(arrays[0]);
					nodeid2 = Integer.parseInt(arrays[1]);
				//	edgeweight = Double.parseDouble(arrays[2]);
					

					
					//打印正在读的两个节点
					System.out.println(arrays[0]);
					System.out.println(arrays[1]);
				//	System.out.println(arrays[2]);
					
					/*
					 * 如果nodeid1的表节点不存在nodeid2，就把这两个节点互相连入各自的表节点链表中
					 */
					if(!neighbor[nodeid1].contains(nodeid2))
					{
						edgenum++;//统计边数加1
						
						neighbor[nodeid1].add(nodeid2);
						neighbor[nodeid2].add(nodeid1);
					}
				}//读取文件结束
				
				/*
				 * 存储到一个哈希表里
				 */
				for(int i = 0; i < nodenum; i++)
				{
					neighbormap.put(i, neighbor[i]);
				}

				
				fr.close();
				br.close();
				
				//打印所有节点数和边数
				System.out.println("nodenum: "+nodenum);
				System.out.println("edgenum: "+edgenum);
				System.out.println();
			
			}
		catch(IOException e)
			{	
				System.out.println("Cannot find the file:" + filename);
			}
		
	}

}
